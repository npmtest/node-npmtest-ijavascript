{"/home/travis/build/npmtest/node-npmtest-ijavascript/test.js":"/* istanbul instrument in package npmtest_ijavascript */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ijavascript/lib.npmtest_ijavascript.js":"/* istanbul instrument in package npmtest_ijavascript */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ijavascript = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ijavascript = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ijavascript/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ijavascript && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ijavascript */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ijavascript\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ijavascript.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ijavascript.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ijavascript.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ijavascript.__dirname + '/lib.npmtest_ijavascript.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/index.js":"// Do not `require(\"ijavascipt\")`\n// Please `require(\"jp-kernel\")` instead\n// This is only a hack to support https://github.com/nteract/nteract/pull/1339\nmodule.exports = require(\"jp-kernel\");\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/bin/ijavascript.js":"#!/usr/bin/env node\n\n/*\n * BSD 3-Clause License\n *\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\nvar console = require(\"console\");\nvar fs = require(\"fs\");\nvar util = require(\"util\");\n\nvar rc = require(\"./rc.js\");\nvar context = rc.context;\nvar copyAsync = rc.copyAsync;\nvar doLog = rc.doLog;\nvar dontLog = rc.dontLog;\nvar getPackageVersion = rc.getPackageVersion;\nvar installKernelAsync = rc.installKernelAsync;\nvar log = rc.log;\nvar makeTmpdir = rc.makeTmpdir;\nvar readPackageJson = rc.readPackageJson;\nvar setIPythonInfoAsync = rc.setIPythonInfoAsync;\nvar setJupyterInfoAsync = rc.setJupyterInfoAsync;\nvar setPaths = rc.setPaths;\nvar setProtocol = rc.setProtocol;\nvar spawnFrontend = rc.spawnFrontend;\n\nvar usage = [\n    \"IJavascript Notebook\",\n    \"\",\n    \"Usage:\",\n    \"\",\n    \"    ijs <options>\",\n    \"\",\n    \"The recognised options are:\",\n    \"\",\n    \"    --help                        show IJavascript and notebook help\",\n    \"    --ijs-debug                   enable debug log level\",\n    \"    --ijs-help                    show IJavascript help\",\n    \"    --ijs-hide-undefined          do not show undefined results\",\n    \"    --ijs-install=[local|global]  install IJavascript kernel\",\n    \"    --ijs-install-kernel          same as --ijs-install=local\",\n    \"                                  (for backwards-compatibility)\",\n    \"    --ijs-protocol=version        set protocol version, e.g. 4.1\",\n    \"    --ijs-show-undefined          show undefined results\",\n    \"    --ijs-spec-path=[none|full]   set whether kernel spec uses full paths\",\n    \"    --ijs-startup-script=path     run script on startup\",\n    \"                                  (path can be a file or a folder)\",\n    \"    --ijs-working-dir=path        set session working directory\",\n    \"                                  (default = current working directory)\",\n    \"    --version                     show IJavascript version\",\n    \"    --versions                    show IJavascript and library versions\",\n    \"\",\n    \"and any other options recognised by the Jupyter notebook; run:\",\n    \"\",\n    \"    jupyter notebook --help\",\n    \"\",\n    \"for a full list.\",\n].join(\"\\n\");\n\nfunction parseCommandArgs(context) {\n    context.args.kernel = [];\n    context.args.frontend = [\n        \"jupyter\",\n        \"notebook\",\n    ];\n    context.flag.hideUndefined = false;\n\n    process.argv.slice(2).forEach(function(e) {\n        if (e === \"--help\") {\n            console.log(usage);\n            context.args.frontend.push(e);\n\n        } else if (e === \"--ijs-debug\") {\n            DEBUG = true;\n            log = doLog;\n\n            context.flag.debug = true;\n            context.args.kernel.push(\"--debug\");\n\n        } else if (e === \"--ijs-help\") {\n            console.log(usage);\n            process.exit(0);\n\n        } else if (e === \"--ijs-hide-undefined\") {\n            context.flag.hideUndefined = true;\n\n        } else if (e.lastIndexOf(\"--ijs-install=\", 0) === 0) {\n            context.flag.install = e.slice(14);\n            if (context.flag.install !== \"local\" &&\n                context.flag.install !== \"global\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e === \"--ijs-install-kernel\") {\n            context.flag.install = \"local\";\n\n        } else if (e.lastIndexOf(\"--ijs-protocol=\", 0) === 0) {\n            context.protocol.version = e.slice(15);\n            context.protocol.majorVersion = parseInt(\n                context.protocol.version.split(\".\", 1)[0]\n            );\n\n        } else if (e === \"--ijs-show-undefined\") {\n            context.flag.hideUndefined = false;\n\n        } else if (e.lastIndexOf(\"--ijs-spec-path=\", 0) === 0) {\n            context.flag.specPath = e.slice(16);\n            if (context.flag.specPath !== \"none\" &&\n                context.flag.specPath !== \"full\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--ijs-startup-script=\", 0) === 0) {\n            context.flag.startup = fs.realpathSync(e.slice(21));\n\n        } else if (e.lastIndexOf(\"--ijs-working-dir=\", 0) === 0) {\n            context.flag.cwd = fs.realpathSync(e.slice(18));\n\n        } else if (e.lastIndexOf(\"--ijs-\", 0) === 0) {\n            console.error(util.format(\"Error: Unknown flag '%s'\\n\", e));\n            console.error(usage);\n            process.exit(1);\n\n        } else if (e.lastIndexOf(\"--KernelManager.kernel_cmd=\", 0) === 0) {\n            console.warn(util.format(\"Warning: Flag '%s' skipped\", e));\n\n        } else if (e === \"--version\") {\n            console.log(context.packageJSON.version);\n            process.exit(0);\n\n        } else if (e === \"--versions\") {\n            console.log(\"ijavascript\", context.packageJSON.version);\n            console.log(\"jmp\", getPackageVersion(\"jmp\"));\n            console.log(\"jp-kernel\", getPackageVersion(\"jp-kernel\"));\n            console.log(\"nel\", getPackageVersion(\"nel\"));\n            console.log(\"uuid\", getPackageVersion(\"uuid\"));\n            console.log(\"zeromq\", getPackageVersion(\"zeromq\"));\n            process.exit(0);\n\n        } else {\n            context.args.frontend.push(e);\n        }\n    });\n\n    if (context.flag.specPath === \"full\") {\n        context.args.kernel = [\n            context.path.node,\n            context.path.kernel,\n        ].concat(context.args.kernel);\n    } else {\n        context.args.kernel = [\n            (process.platform === 'win32') ? 'ijskernel.cmd' : 'ijskernel',\n        ].concat(context.args.kernel);\n    }\n\n    if (context.flag.startup) {\n        context.args.kernel.push(\"--startup-script=\" + context.flag.startup);\n    }\n\n    if (context.flag.cwd) {\n        context.args.kernel.push(\"--session-working-dir=\" + context.flag.cwd);\n    }\n\n    if (context.flag.hideUndefined) {\n        context.args.kernel.push(\"--hide-undefined\");\n    } else {\n        context.args.kernel.push(\"--show-undefined\");\n    }\n\n    context.args.kernel.push(\"{connection_file}\");\n}\n\n\nsetPaths(context);\n\nreadPackageJson(context);\n\nparseCommandArgs(context);\n\nsetJupyterInfoAsync(context, function() {\n    setProtocol(context);\n\n    installKernelAsync(context, function() {\n        log(\"CONTEXT:\", context);\n\n        if (!context.flag.install) {\n            spawnFrontend(context);\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/bin/rc.js":"/*\n * BSD 3-Clause License\n *\n * Copyright (c) 2017, Nicolas Riesco and others as credited in the AUTHORS file\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\nvar console = require(\"console\");\nvar crypto = require(\"crypto\");\nvar exec = require(\"child_process\").exec;\nvar fs = require(\"fs\");\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar spawn = require(\"child_process\").spawn;\nvar util = require(\"util\");\n\n\n// Setup logging helpers\nvar DEBUG;\n\nvar log;\nvar dontLog = function dontLog() {};\nvar doLog = function doLog() {\n    process.stderr.write(\"IJS: \");\n    console.error.apply(this, arguments);\n};\n\nif (process.env.DEBUG) {\n    DEBUG = true;\n\n    try {\n        doLog = require(\"debug\")(\"IJS:\");\n    } catch (err) {}\n}\n\nlog = DEBUG ? doLog : dontLog;\n\n\n/**\n * @typedef Context\n *\n * @property            context\n * @property            context.path\n * @property {String}   context.path.node     Path to Node.js shell\n * @property {String}   context.path.root     Path to IJavascript root folder\n * @property {String}   context.path.kernel   Path to IJavascript kernel\n * @property {String}   context.path.images   Path to IJavascript images folder\n * @property {Object}   context.packageJSON   Contents of npm package.json\n * @property            context.flag\n * @property {Boolean}  context.flag.debug          --debug\n * @property {Boolean}  context.flag.hideUndefined  --[hide|show]-undefined\n * @property {String}   context.flag.install        --install=[local|global]\n * @property {String}   context.flag.specPath       --spec-path=[none|full]\n * @property {String}   context.flag.startup        --startup-script=path\n * @property {String}   context.flag.cwd            --working-dir=path\n * @property            context.args\n * @property {String[]} context.args.kernel   Command arguments to run kernel\n * @property {String[]} context.args.frontend Command arguments to run frontend\n * @property            context.protocol\n * @property {String}   context.protocol.version      Protocol version\n * @property {Integer}  context.protocol.majorVersion Protocol major version\n * @property            context.frontend\n * @property {Error}    context.frontend.error        Frontend error\n * @property {String}   context.frontend.version      Frontend version\n * @property {Integer}  context.frontend.majorVersion Frontend major version\n */\n\n/**\n * Script context\n * @type Context\n */\nvar context = {\n    path: {},\n    packageJSON: undefined,\n    flag: {},\n    args: {},\n    protocol: {},\n    frontend: {},\n};\n\nfunction setPaths(context) {\n    context.path.node = process.argv[0];\n    context.path.root = path.dirname(path.dirname(\n        fs.realpathSync(process.argv[1])\n    ));\n    context.path.kernel = path.join(context.path.root, \"lib\", \"kernel.js\");\n    context.path.images = path.join(context.path.root, \"images\");\n}\n\nfunction readPackageJson(context) {\n    context.packageJSON = JSON.parse(\n        fs.readFileSync(path.join(context.path.root, \"package.json\"))\n    );\n}\n\nfunction getPackageVersion(packageName) {\n    var packagePath = path.dirname(require.resolve(packageName));\n    var packageJSON = JSON.parse(\n        fs.readFileSync(path.join(packagePath, \"package.json\"))\n    );\n    return packageJSON.version;\n}\n\nfunction setJupyterInfoAsync(context, callback) {\n    exec(\"jupyter --version\", function(error, stdout, stderr) {\n        if (error) {\n            context.frontend.error = error;\n            setIPythonInfoAsync(context, callback);\n            return;\n        }\n\n        context.args.frontend[0] = \"jupyter\";\n        context.frontend.version = stdout.toString().trim();\n        context.frontend.majorVersion = parseInt(\n            context.frontend.version.split(\".\")[0]\n        );\n        if (isNaN(context.frontend.majorVersion)) {\n            console.error(\n                \"Error parsing Jupyter version:\",\n                context.frontend.version\n            );\n            log(\"CONTEXT:\", context);\n            process.exit(1);\n        }\n\n        if (callback) {\n            callback();\n        }\n    });\n}\n\nfunction setIPythonInfoAsync(context, callback) {\n    exec(\"ipython --version\", function(error, stdout, stderr) {\n        if (error) {\n            if (context.frontend.error) {\n                console.error(\"Error running `jupyter --version`\");\n                console.error(context.frontend.error.toString());\n            }\n            console.error(\"Error running `ipython --version`\");\n            console.error(error.toString());\n            log(\"CONTEXT:\", context);\n            process.exit(1);\n        }\n\n        context.args.frontend[0] = \"ipython\";\n        context.frontend.version = stdout.toString().trim();\n        context.frontend.majorVersion = parseInt(\n            context.frontend.version.split(\".\")[0]\n        );\n        if (isNaN(context.frontend.majorVersion)) {\n            console.error(\n                \"Error parsing IPython version:\",\n                context.frontend.version\n            );\n            log(\"CONTEXT:\", context);\n            process.exit(1);\n        }\n\n        if (callback) {\n            callback();\n        }\n    });\n}\n\nfunction setProtocol(context) {\n    if (!context.protocol.version) {\n        if (context.frontend.majorVersion < 3) {\n            context.protocol.version = \"4.1\";\n            context.protocol.majorVersion = 4;\n        } else {\n            context.protocol.version = \"5.0\";\n            context.protocol.majorVersion = 5;\n        }\n    }\n\n    context.args.kernel.push(\"--protocol=\" + context.protocol.version);\n\n    if (context.frontend.majorVersion < 3) {\n        context.args.frontend.push(util.format(\n            \"--KernelManager.kernel_cmd=['%s']\",\n            context.args.kernel.join(\"', '\")\n        ));\n    }\n\n    if (context.frontend.majorVersion < 3 &&\n        context.protocol.majorVersion >= 5) {\n        console.warn(\"Warning: Protocol v5+ requires Jupyter v3+\");\n    }\n}\n\nfunction installKernelAsync(context, callback) {\n    if (context.frontend.majorVersion < 3) {\n        if (context.flag.install) {\n            console.error(\n                \"Error: Installation of kernel specs requires Jupyter v3+\"\n            );\n        }\n\n        if (callback) {\n            callback();\n        }\n\n        return;\n    }\n\n    // Create temporary spec folder\n    var tmpdir = makeTmpdir();\n    var specDir = path.join(tmpdir, \"javascript\");\n    fs.mkdirSync(specDir);\n\n    // Create spec file\n    var specFile = path.join(specDir, \"kernel.json\");\n    var spec = {\n        argv: context.args.kernel,\n        display_name: \"Javascript (Node.js)\",\n        language: \"javascript\",\n    };\n    fs.writeFileSync(specFile, JSON.stringify(spec));\n\n    // Copy logo files\n    var logoDir = path.join(context.path.images, \"nodejs\");\n    var logo32Src = path.join(logoDir, \"js-green-32x32.png\");\n    var logo32Dst = path.join(specDir, \"logo-32x32.png\");\n    var logo64Src = path.join(logoDir, \"js-green-64x64.png\");\n    var logo64Dst = path.join(specDir, \"logo-64x64.png\");\n    copyAsync(logo32Src, logo32Dst, function() {\n        copyAsync(logo64Src, logo64Dst, function() {\n\n            // Install kernel spec\n            var args = [\n                context.args.frontend[0],\n                \"kernelspec install --replace\",\n                specDir,\n            ];\n            if (context.flag.install !== \"global\") {\n                args.push(\"--user\");\n            }\n            var cmd = args.join(\" \");\n            exec(cmd, function(error, stdout, stderr) {\n\n                // Remove temporary spec folder\n                fs.unlinkSync(specFile);\n                fs.unlinkSync(logo32Dst);\n                fs.unlinkSync(logo64Dst);\n                fs.rmdirSync(specDir);\n                fs.rmdirSync(tmpdir);\n\n                if (error) {\n                    console.error(util.format(\"Error running `%s`\", cmd));\n                    console.error(error.toString());\n                    if (stderr) console.error(stderr.toString());\n                    log(\"CONTEXT:\", context);\n                    process.exit(1);\n                }\n\n                if (callback) {\n                    callback();\n                }\n            });\n        });\n    });\n}\n\nfunction spawnFrontend(context) {\n    var cmd = context.args.frontend[0];\n    var args = context.args.frontend.slice(1);\n    var frontend = spawn(cmd, args, {\n        stdio: \"inherit\"\n    });\n\n    // Relay SIGINT onto the frontend\n    var signal = \"SIGINT\";\n    process.on(signal, function() {\n        frontend.emit(signal);\n    });\n}\n\nfunction makeTmpdir(maxAttempts) {\n    maxAttempts = maxAttempts ? maxAttempts : 10;\n    var attempts = 0;\n\n    var tmpdir;\n    while (!tmpdir) {\n        attempts++;\n        try {\n            tmpdir = path.join(\n                os.tmpdir(),\n                crypto.randomBytes(16).toString('hex')\n            );\n            fs.mkdirSync(tmpdir);\n        } catch (e) {\n            if (attempts >= maxAttempts)\n                throw e;\n            tmpdir = null;\n        }\n    }\n\n    return tmpdir;\n}\n\nfunction copyAsync(src, dst, callback) {\n    var readStream = fs.createReadStream(src);\n    var writeStream = fs.createWriteStream(dst);\n    if (callback) {\n        readStream.on(\"end\", callback);\n    }\n    readStream.pipe(writeStream);\n}\n\nmodule.exports = {\n    context: context,\n    copyAsync: copyAsync,\n    doLog: doLog,\n    dontLog: dontLog,\n    getPackageVersion: getPackageVersion,\n    installKernelAsync: installKernelAsync,\n    log: log,\n    makeTmpdir: makeTmpdir,\n    readPackageJson: readPackageJson,\n    setIPythonInfoAsync: setIPythonInfoAsync,\n    setJupyterInfoAsync: setJupyterInfoAsync,\n    setPaths: setPaths,\n    setProtocol: setProtocol,\n    spawnFrontend: spawnFrontend,\n};\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/bin/ijsconsole.js":"#!/usr/bin/env node\n\n/*\n * BSD 3-Clause License\n *\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\nvar console = require(\"console\");\nvar fs = require(\"fs\");\nvar util = require(\"util\");\n\nvar rc = require(\"./rc.js\");\nvar context = rc.context;\nvar copyAsync = rc.copyAsync;\nvar doLog = rc.doLog;\nvar dontLog = rc.dontLog;\nvar getPackageVersion = rc.getPackageVersion;\nvar installKernelAsync = rc.installKernelAsync;\nvar log = rc.log;\nvar makeTmpdir = rc.makeTmpdir;\nvar readPackageJson = rc.readPackageJson;\nvar setIPythonInfoAsync = rc.setIPythonInfoAsync;\nvar setJupyterInfoAsync = rc.setJupyterInfoAsync;\nvar setPaths = rc.setPaths;\nvar setProtocol = rc.setProtocol;\nvar spawnFrontend = rc.spawnFrontend;\n\nvar usage = [\n    \"IJavascript Console\",\n    \"\",\n    \"Usage:\",\n    \"\",\n    \"    ijsconsole <options>\",\n    \"\",\n    \"The recognised options are:\",\n    \"\",\n    \"    --help                        show all the help\",\n    \"    --ijs-debug                   enable debug messages\",\n    \"    --ijs-help                    show this help\",\n    \"    --ijs-hide-undefined          do not show undefined results\",\n    \"    --ijs-install=[local|global]  install kernel for user or globally\",\n    \"    --ijs-protocol=version        set protocol version, e.g. 5.0\",\n    \"    --ijs-show-undefined          show undefined results\",\n    \"    --ijs-spec-path=[none|full]   set whether kernel spec uses full paths\",\n    \"    --ijs-startup-script=path     run script on startup\",\n    \"                                  (path can be a file or a folder)\",\n    \"    --ijs-working-dir=path        set session working directory\",\n    \"                                  (default = current working directory)\",\n    \"    --version                     show IJavascript version\",\n    \"    --versions                    show IJavascript and library versions\",\n    \"\",\n    \"and any other options recognised by the Jupyter notebook; run:\",\n    \"\",\n    \"    jupyter console --help\",\n    \"\",\n    \"for a full list.\",\n].join(\"\\n\");\n\nfunction parseCommandArgs(context) {\n    context.args.kernel = [];\n    context.args.frontend = [\n        \"jupyter\",\n        \"console\",\n    ];\n    context.flag.hideUndefined = false;\n\n    process.argv.slice(2).forEach(function(e) {\n        if (e === \"--help\") {\n            console.log(usage);\n            context.args.frontend.push(e);\n\n        } else if (e === \"--ijs-debug\") {\n            DEBUG = true;\n            log = doLog;\n\n            context.flag.debug = true;\n            context.args.kernel.push(\"--debug\");\n\n        } else if (e === \"--ijs-help\") {\n            console.log(usage);\n            process.exit(0);\n\n        } else if (e === \"--ijs-hide-undefined\") {\n            context.flag.hideUndefined = true;\n\n        } else if (e.lastIndexOf(\"--ijs-install=\", 0) === 0) {\n            context.flag.install = e.slice(14);\n            if (context.flag.install !== \"local\" &&\n                context.flag.install !== \"global\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--ijs-protocol=\", 0) === 0) {\n            context.protocol.version = e.slice(15);\n            context.protocol.majorVersion = parseInt(\n                context.protocol.version.split(\".\", 1)[0]\n            );\n\n        } else if (e === \"--ijs-show-undefined\") {\n            context.flag.hideUndefined = false;\n\n        } else if (e.lastIndexOf(\"--ijs-spec-path=\", 0) === 0) {\n            context.flag.specPath = e.slice(16);\n            if (context.flag.specPath !== \"none\" &&\n                context.flag.specPath !== \"full\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--ijs-startup-script=\", 0) === 0) {\n            context.flag.startup = fs.realpathSync(e.slice(21));\n\n        } else if (e.lastIndexOf(\"--ijs-working-dir=\", 0) === 0) {\n            context.flag.cwd = fs.realpathSync(e.slice(18));\n\n        } else if (e.lastIndexOf(\"--ijs-\", 0) === 0) {\n            console.error(util.format(\"Error: Unknown flag '%s'\\n\", e));\n            console.error(usage);\n            process.exit(1);\n\n        } else if (e.lastIndexOf(\"--KernelManager.kernel_cmd=\", 0) === 0) {\n            console.warn(util.format(\"Warning: Flag '%s' skipped\", e));\n\n        } else if (e === \"--version\") {\n            console.log(context.packageJSON.version);\n            process.exit(0);\n\n        } else if (e === \"--versions\") {\n            console.log(\"ijavascript\", context.packageJSON.version);\n            console.log(\"jmp\", getPackageVersion(\"jmp\"));\n            console.log(\"jp-kernel\", getPackageVersion(\"jp-kernel\"));\n            console.log(\"nel\", getPackageVersion(\"nel\"));\n            console.log(\"uuid\", getPackageVersion(\"uuid\"));\n            console.log(\"zeromq\", getPackageVersion(\"zeromq\"));\n            process.exit(0);\n\n        } else {\n            context.args.frontend.push(e);\n        }\n    });\n\n    if (context.flag.specPath === \"full\") {\n        context.args.kernel = [\n            context.path.node,\n            context.path.kernel,\n        ].concat(context.args.kernel);\n    } else {\n        context.args.kernel = [\n            (process.platform === 'win32') ? 'ijskernel.cmd' : 'ijskernel',\n        ].concat(context.args.kernel);\n    }\n\n    if (context.flag.startup) {\n        context.args.kernel.push(\"--startup-script=\" + context.flag.startup);\n    }\n\n    if (context.flag.cwd) {\n        context.args.kernel.push(\"--session-working-dir=\" + context.flag.cwd);\n    }\n\n    if (context.flag.hideUndefined) {\n        context.args.kernel.push(\"--hide-undefined\");\n    } else {\n        context.args.kernel.push(\"--show-undefined\");\n    }\n\n    context.args.kernel.push(\"{connection_file}\");\n}\n\n\nsetPaths(context);\n\nreadPackageJson(context);\n\nparseCommandArgs(context);\n\nsetJupyterInfoAsync(context, function() {\n    setProtocol(context);\n\n    installKernelAsync(context, function() {\n        log(\"CONTEXT:\", context);\n\n        if (!context.flag.install) {\n            spawnFrontend(context);\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/bin/ijsinstall.js":"#!/usr/bin/env node\n\n/*\n * BSD 3-Clause License\n *\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\nvar console = require(\"console\");\nvar fs = require(\"fs\");\nvar util = require(\"util\");\n\nvar rc = require(\"./rc.js\");\nvar context = rc.context;\nvar copyAsync = rc.copyAsync;\nvar doLog = rc.doLog;\nvar dontLog = rc.dontLog;\nvar getPackageVersion = rc.getPackageVersion;\nvar installKernelAsync = rc.installKernelAsync;\nvar log = rc.log;\nvar makeTmpdir = rc.makeTmpdir;\nvar readPackageJson = rc.readPackageJson;\nvar setIPythonInfoAsync = rc.setIPythonInfoAsync;\nvar setJupyterInfoAsync = rc.setJupyterInfoAsync;\nvar setPaths = rc.setPaths;\nvar setProtocol = rc.setProtocol;\nvar spawnFrontend = rc.spawnFrontend;\n\nvar usage = [\n    \"IJavascript Kernel Installer\",\n    \"\",\n    \"Usage:\",\n    \"\",\n    \"    ijsinstall <options>\",\n    \"\",\n    \"The recognised options are:\",\n    \"\",\n    \"--debug                   show debug messages\",\n    \"--help                    show this help\",\n    \"--hide-undefined          do not show undefined results\",\n    \"--install=[local|global]  install kernel for current user or globally\",\n    \"--protocol=version        set messaging protocol version, e.g. 5.0\",\n    \"--show-undefined          show undefined results\",\n    \"--spec-path=[none|full]   set whether kernel spec uses full paths\",\n    \"--startup-script=path     run script on kernel startup\",\n    \"                          (path can be a file or a folder)\",\n    \"--version                 show kernel version\",\n    \"--versions                show kernel and library versions\",\n    \"--working-dir=path        set kernel working directory\",\n    \"                          (default = current working directory)\",\n].join(\"\\n\");\n\nfunction parseCommandArgs(context) {\n    var unparsedArgs = [];\n\n    context.args.kernel = [];\n    context.args.frontend = [\n        \"jupyter\",\n        \"notebook\",\n    ];\n    context.flag.install = \"local\";\n    context.flag.hideUndefined = true;\n\n    process.argv.slice(2).forEach(function(e) {\n        if (e === \"--debug\") {\n            DEBUG = true;\n            log = doLog;\n\n            context.flag.debug = true;\n            context.args.kernel.push(\"--debug\");\n\n        } else if (e === \"--help\") {\n            console.log(usage);\n            process.exit(0);\n\n        } else if (e === \"--hide-undefined\") {\n            context.flag.hideUndefined = true;\n\n        } else if (e.lastIndexOf(\"--install=\", 0) === 0) {\n            context.flag.install = e.slice(10);\n            if (context.flag.install !== \"local\" &&\n                context.flag.install !== \"global\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--protocol=\", 0) === 0) {\n            context.protocol.version = e.slice(11);\n            context.protocol.majorVersion = parseInt(\n                context.protocol.version.split(\".\", 1)[0]\n            );\n\n        } else if (e === \"--show-undefined\") {\n            context.flag.hideUndefined = false;\n\n        } else if (e.lastIndexOf(\"--spec-path=\", 0) === 0) {\n            context.flag.specPath = e.slice(12);\n            if (context.flag.specPath !== \"none\" &&\n                context.flag.specPath !== \"full\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--startup-script=\", 0) === 0) {\n            context.flag.startup = fs.realpathSync(e.slice(17));\n\n        } else if (e === \"--version\") {\n            console.log(context.packageJSON.version);\n            process.exit(0);\n\n        } else if (e === \"--versions\") {\n            console.log(\"ijavascript\", context.packageJSON.version);\n            console.log(\"jmp\", getPackageVersion(\"jmp\"));\n            console.log(\"jp-kernel\", getPackageVersion(\"jp-kernel\"));\n            console.log(\"nel\", getPackageVersion(\"nel\"));\n            console.log(\"uuid\", getPackageVersion(\"uuid\"));\n            console.log(\"zeromq\", getPackageVersion(\"zeromq\"));\n            process.exit(0);\n\n        } else if (e.lastIndexOf(\"--working-dir=\", 0) === 0) {\n            context.flag.cwd = fs.realpathSync(e.slice(14));\n\n        } else {\n            unparsedArgs.push(e);\n        }\n    });\n\n    if (context.flag.specPath === \"full\") {\n        context.args.kernel = [\n            context.path.node,\n            context.path.kernel,\n        ].concat(context.args.kernel);\n    } else {\n        context.args.kernel = [\n            (process.platform === 'win32') ? 'ijskernel.cmd' : 'ijskernel',\n        ].concat(context.args.kernel);\n    }\n\n    if (context.flag.startup) {\n        context.args.kernel.push(\"--startup-script=\" + context.flag.startup);\n    }\n\n    if (context.flag.cwd) {\n        context.args.kernel.push(\"--session-working-dir=\" + context.flag.cwd);\n    }\n\n    if (context.flag.hideUndefined) {\n        context.args.kernel.push(\"--hide-undefined\");\n    } else {\n        context.args.kernel.push(\"--show-undefined\");\n    }\n\n    context.args.kernel = context.args.kernel.concat(unparsedArgs);\n\n    context.args.kernel.push(\"{connection_file}\");\n}\n\n\nsetPaths(context);\n\nreadPackageJson(context);\n\nparseCommandArgs(context);\n\nsetJupyterInfoAsync(context, function() {\n    setProtocol(context);\n\n    installKernelAsync(context, function() {\n        log(\"CONTEXT:\", context);\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/bin/ijsnotebook.js":"#!/usr/bin/env node\n\n/*\n * BSD 3-Clause License\n *\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\nvar console = require(\"console\");\nvar fs = require(\"fs\");\nvar util = require(\"util\");\n\nvar rc = require(\"./rc.js\");\nvar context = rc.context;\nvar copyAsync = rc.copyAsync;\nvar doLog = rc.doLog;\nvar dontLog = rc.dontLog;\nvar getPackageVersion = rc.getPackageVersion;\nvar installKernelAsync = rc.installKernelAsync;\nvar log = rc.log;\nvar makeTmpdir = rc.makeTmpdir;\nvar readPackageJson = rc.readPackageJson;\nvar setIPythonInfoAsync = rc.setIPythonInfoAsync;\nvar setJupyterInfoAsync = rc.setJupyterInfoAsync;\nvar setPaths = rc.setPaths;\nvar setProtocol = rc.setProtocol;\nvar spawnFrontend = rc.spawnFrontend;\n\nvar usage = [\n    \"IJavascript Notebook\",\n    \"\",\n    \"Usage:\",\n    \"\",\n    \"    ijsnotebook <options>\",\n    \"\",\n    \"The recognised options are:\",\n    \"\",\n    \"    --help                        show all the help\",\n    \"    --ijs-debug                   enable debug messages\",\n    \"    --ijs-help                    show this help\",\n    \"    --ijs-hide-undefined          do not show undefined results\",\n    \"    --ijs-install=[local|global]  install kernel for user or globally\",\n    \"    --ijs-protocol=version        set protocol version, e.g. 5.0\",\n    \"    --ijs-show-undefined          show undefined results\",\n    \"    --ijs-spec-path=[none|full]   set whether kernel spec uses full paths\",\n    \"    --ijs-startup-script=path     run script on startup\",\n    \"                                  (path can be a file or a folder)\",\n    \"    --ijs-working-dir=path        set session working directory\",\n    \"                                  (default = current working directory)\",\n    \"    --version                     show IJavascript version\",\n    \"    --versions                    show IJavascript and library versions\",\n    \"\",\n    \"and any other options recognised by the Jupyter notebook; run:\",\n    \"\",\n    \"    jupyter notebook --help\",\n    \"\",\n    \"for a full list.\",\n].join(\"\\n\");\n\nfunction parseCommandArgs(context) {\n    context.args.kernel = [];\n    context.args.frontend = [\n        \"jupyter\",\n        \"notebook\",\n    ];\n    context.flag.hideUndefined = true;\n\n    process.argv.slice(2).forEach(function(e) {\n        if (e === \"--help\") {\n            console.log(usage);\n            context.args.frontend.push(e);\n\n        } else if (e === \"--ijs-debug\") {\n            DEBUG = true;\n            log = doLog;\n\n            context.flag.debug = true;\n            context.args.kernel.push(\"--debug\");\n\n        } else if (e === \"--ijs-help\") {\n            console.log(usage);\n            process.exit(0);\n\n        } else if (e === \"--ijs-hide-undefined\") {\n            context.flag.hideUndefined = true;\n\n        } else if (e.lastIndexOf(\"--ijs-install=\", 0) === 0) {\n            context.flag.install = e.slice(14);\n            if (context.flag.install !== \"local\" &&\n                context.flag.install !== \"global\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--ijs-protocol=\", 0) === 0) {\n            context.protocol.version = e.slice(15);\n            context.protocol.majorVersion = parseInt(\n                context.protocol.version.split(\".\", 1)[0]\n            );\n\n        } else if (e === \"--ijs-show-undefined\") {\n            context.flag.hideUndefined = false;\n\n        } else if (e.lastIndexOf(\"--ijs-spec-path=\", 0) === 0) {\n            context.flag.specPath = e.slice(16);\n            if (context.flag.specPath !== \"none\" &&\n                context.flag.specPath !== \"full\") {\n                console.error(\n                    util.format(\"Error: Unknown flag option '%s'\\n\", e)\n                );\n                console.error(usage);\n                process.exit(1);\n            }\n\n        } else if (e.lastIndexOf(\"--ijs-startup-script=\", 0) === 0) {\n            context.flag.startup = fs.realpathSync(e.slice(21));\n\n        } else if (e.lastIndexOf(\"--ijs-working-dir=\", 0) === 0) {\n            context.flag.cwd = fs.realpathSync(e.slice(18));\n\n        } else if (e.lastIndexOf(\"--ijs-\", 0) === 0) {\n            console.error(util.format(\"Error: Unknown flag '%s'\\n\", e));\n            console.error(usage);\n            process.exit(1);\n\n        } else if (e.lastIndexOf(\"--KernelManager.kernel_cmd=\", 0) === 0) {\n            console.warn(util.format(\"Warning: Flag '%s' skipped\", e));\n\n        } else if (e === \"--version\") {\n            console.log(context.packageJSON.version);\n            process.exit(0);\n\n        } else if (e === \"--versions\") {\n            console.log(\"ijavascript\", context.packageJSON.version);\n            console.log(\"jmp\", getPackageVersion(\"jmp\"));\n            console.log(\"jp-kernel\", getPackageVersion(\"jp-kernel\"));\n            console.log(\"nel\", getPackageVersion(\"nel\"));\n            console.log(\"uuid\", getPackageVersion(\"uuid\"));\n            console.log(\"zeromq\", getPackageVersion(\"zeromq\"));\n            process.exit(0);\n\n        } else {\n            context.args.frontend.push(e);\n        }\n    });\n\n    if (context.flag.specPath === \"full\") {\n        context.args.kernel = [\n            context.path.node,\n            context.path.kernel,\n        ].concat(context.args.kernel);\n    } else {\n        context.args.kernel = [\n            (process.platform === 'win32') ? 'ijskernel.cmd' : 'ijskernel',\n        ].concat(context.args.kernel);\n    }\n\n    if (context.flag.startup) {\n        context.args.kernel.push(\"--startup-script=\" + context.flag.startup);\n    }\n\n    if (context.flag.cwd) {\n        context.args.kernel.push(\"--session-working-dir=\" + context.flag.cwd);\n    }\n\n    if (context.flag.hideUndefined) {\n        context.args.kernel.push(\"--hide-undefined\");\n    } else {\n        context.args.kernel.push(\"--show-undefined\");\n    }\n\n    context.args.kernel.push(\"{connection_file}\");\n}\n\n\nsetPaths(context);\n\nreadPackageJson(context);\n\nparseCommandArgs(context);\n\nsetJupyterInfoAsync(context, function() {\n    setProtocol(context);\n\n    installKernelAsync(context, function() {\n        log(\"CONTEXT:\", context);\n\n        if (!context.flag.install) {\n            spawnFrontend(context);\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-ijavascript/node_modules/ijavascript/lib/kernel.js":"#!/usr/bin/env node\n\n/*\n * BSD 3-Clause License\n *\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\nvar console = require(\"console\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar vm = require(\"vm\");\n\nvar Kernel = require(\"jp-kernel\");\n\n\n// Parse command arguments\nvar config = parseCommandArguments();\n\n\n// Setup logging helpers\nvar log;\nvar dontLog = function dontLog() {};\nvar doLog = function doLog() {\n    process.stderr.write(\"KERNEL: \");\n    console.error.apply(this, arguments);\n};\n\nif (process.env.DEBUG) {\n    global.DEBUG = true;\n\n    try {\n        doLog = require(\"debug\")(\"KERNEL:\");\n    } catch (err) {}\n}\n\nlog = global.DEBUG ? doLog : dontLog;\n\n\n// Start kernel\nvar kernel = new Kernel(config);\n\n// WORKAROUND: Fixes https://github.com/n-riesco/ijavascript/issues/97\nkernel.handlers.is_complete_request = function is_complete_request(request) {\n    request.respond(this.iopubSocket, 'status', {\n        execution_state: 'busy'\n    });\n\n    var content;\n    try {\n        new vm.Script(request.content.code);\n        content = {\n            status: \"complete\",\n        };\n    } catch (err) {\n        content = {\n            status: \"incomplete\",\n            indent: \"\",\n        };\n    }\n\n    request.respond(\n        this.shellSocket,\n        \"is_complete_reply\",\n        content,\n        {},\n        this.protocolVersion\n    );\n\n    request.respond(this.iopubSocket, 'status', {\n        execution_state: 'idle'\n    });\n};\n\n// Interpret a SIGINT signal as a request to interrupt the kernel\nprocess.on(\"SIGINT\", function() {\n    log(\"Interrupting kernel\");\n    kernel.restart(); // TODO(NR) Implement kernel interruption\n});\n\n\n/**\n * Parse command arguments\n *\n * @returns {module:jp-kernel~Config} Kernel config\n */\nfunction parseCommandArguments() {\n    var config = {\n        cwd: process.cwd(),\n        hideUndefined: false,\n        protocolVersion: \"5.0\",\n        startupCallback: function() {\n            log(\"startupCallback:\", this.startupCallback);\n        },\n    };\n\n    var usage = (\n        \"Usage: node kernel.js \" +\n        \"[--debug] \" +\n        \"[--hide-undefined] \" +\n        \"[--protocol=Major[.minor[.patch]]] \" +\n        \"[--session-working-dir=path] \" +\n        \"[--show-undefined] \" +\n        \"[--startup-script=path] \" +\n        \"connection_file\"\n    );\n\n    var FLAGS = [\n        [\"--debug\", function() {\n            config.debug = true;\n        }],\n        [\"--hide-undefined\", function() {\n            config.hideUndefined = true;\n        }],\n        [\"--protocol=\", function(setting) {\n            config.protocolVersion = setting;\n        }],\n        [\"--session-working-dir=\", function(setting) {\n            config.cwd = setting;\n        }],\n        [\"--show-undefined\", function() {\n            config.hideUndefined = false;\n        }],\n        [\"--startup-script=\", function(setting) {\n            config.startupScript = setting;\n        }],\n    ];\n\n    try {\n        var connectionFile;\n\n        process.argv.slice(2).forEach(function(arg) {\n            for(var i = 0; i < FLAGS.length; i++) {\n                var flag = FLAGS[i];\n                var label = flag[0];\n                var action = flag[1];\n\n                var matchesFlag = (arg.indexOf(label) === 0);\n                if (matchesFlag) {\n                    var setting = arg.slice(label.length);\n                    action(setting);\n                    return;\n                }\n            }\n\n            if (connectionFile) {\n                throw new Error(\"Error: too many arguments\");\n            }\n\n            connectionFile = arg;\n        });\n\n        if (!connectionFile) {\n            throw new Error(\"Error: missing connection_file\");\n        }\n\n        config.connection = JSON.parse(fs.readFileSync(connectionFile));\n\n    } catch (e) {\n        console.error(\"KERNEL: ARGV:\", process.argv);\n        console.error(usage);\n        throw e;\n    }\n\n    var nodeVersion;\n    var protocolVersion;\n    var ijsVersion;\n    var majorVersion = parseInt(config.protocolVersion.split(\".\")[0]);\n    if (majorVersion <= 4) {\n        nodeVersion = process.versions.node.split('.')\n            .map(function(v) {\n                return parseInt(v, 10);\n            });\n        protocolVersion = config.protocolVersion.split('.')\n            .map(function(v) {\n                return parseInt(v, 10);\n            });\n        config.kernelInfoReply = {\n            \"language\": \"javascript\",\n            \"language_version\": nodeVersion,\n            \"protocol_version\": protocolVersion,\n        };\n    } else {\n        nodeVersion = process.versions.node;\n        protocolVersion = config.protocolVersion;\n        ijsVersion = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\" , \"package.json\"))).version;\n        config.kernelInfoReply = {\n            \"protocol_version\": protocolVersion,\n            \"implementation\": \"ijavascript\",\n            \"implementation_version\": ijsVersion,\n            \"language_info\": {\n                \"name\": \"javascript\",\n                \"version\": nodeVersion,\n                \"mimetype\": \"application/javascript\",\n                \"file_extension\": \".js\",\n            },\n            \"banner\": (\n                \"IJavascript v\" + ijsVersion + \"\\n\" +\n                \"https://github.com/n-riesco/ijavascript\\n\"\n            ),\n            \"help_links\": [{\n                \"text\": \"IJavascript Homepage\",\n                \"url\": \"https://github.com/n-riesco/ijavascript\",\n            }],\n        };\n    }\n\n    return config;\n}\n"}